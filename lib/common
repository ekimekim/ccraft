
-- float constants
inf = 1/0
ninf = -inf
nan = inf + ninf

-- split a string by pattern, returning a list
function split(string, pattern)
	local result = {}
	local start = 1
	while true do
		local index = string.find(string, pattern, start)
		if index == nil then
			table.insert(result, string.sub(string, start))
			break
		end
		table.insert(result, string.sub(string, start, index - 1))
		start = index + 1
	end
	return result
end

-- search inventory for fuel until we have at least limit fuel (or nil for turtle limit)
-- returns true if limit achieved, false if we fell short
function fuelSearch(limit)
	limit = limit or turtle.getFuelLimit()
	for slot = 1, 16 do
		if turtle.getFuelLevel() >= limit then return true end
		turtle.select(slot)
		while turtle.getFuelLevel() < limit do
			if not turtle.refuel(1) then break end
		end
	end
	return false
end

-- waits for func to return true, polling every interval seconds (default 1)
-- if timeout given, aborts after that time.
-- returns remaining timeout, or nil if timeout triggered (or if timeout not set)
function waitFor(func, interval, timeout)
	local start = os.clock()
	while not func() do
		sleep(interval)
		if timeout and os.clock() - start > timeout then
			return nil
		end
	end
	return timeout
end

-- Get the parent directory of path
-- This is equivilent to fs.getDir(), however that function doesn't exist
-- until ComputerCraft 1.63 (we're running 1.6)
function getParent(path)
	path = fs.combine("", path) -- normalize
	local s = string.reverse(path)
	local index = string.find(s, "/")
	if index == nil then
		-- path is in root dir
		return ""
	end
	-- index is the index of first / in s, ie. last / in path
	s = string.sub(s, index+1) -- we cut off up to the first (last) /
	return string.reverse(s)
end
